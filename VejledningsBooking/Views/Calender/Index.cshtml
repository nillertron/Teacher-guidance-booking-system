@inject Infrastructure.ApplicationLogic.Person.Concretes.IPersonState state
@model VejledningsBooking.ViewModel.CalenderViewModel
@{VejledningsBooking.ViewModel.CreateBookingViewModel bookingViewModel = new VejledningsBooking.ViewModel.CreateBookingViewModel();
    VejledningsBooking.Views.Timeslot.CreateTimeslotViewModel createTimeslotViewModel = new VejledningsBooking.Views.Timeslot.CreateTimeslotViewModel(); }

@if (state.GetUserType().Result == PersonType.Teacher)
{
    @Html.ActionLink("Create Calender", "Create", "Calender", null, new { @class = "btn btn-primary" })
}
<section>
    <form asp-action="Index">
        <select onchange="this.form.submit()" asp-for="SelectedHoldId">
            <option disabled selected>-- Select a hold --</option>
            @foreach (var hold in state.person.HoldLines)
            {
                <option value="@hold.Hold.Id">@hold.Hold.Name</option>
            }
        </select>
    </form>

</section>
<section>
    @if (Model != null)
    {
        @if (Model.SelectedCalender != null)
        {
            @if (state.GetUserType().Result == PersonType.Teacher)
            {
                <button class="btn btn-primary" onclick="ToggleModal('CreateTimeslotModal')" data-toggle="modal" data-target="#CreateTimeslotModal">Create Timeslot</button>
                createTimeslotViewModel.Timeslot.TeacherId = state.person.Id;
                createTimeslotViewModel.Timeslot.CalendarId = Model.SelectedCalender.Id;

            }
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th scope="col"><h5 style="white-space:pre-wrap">Time</h5></th>
                        @for (int i = 0; i < 5; i++)
                        {
                            <th scope="col"><h5 style="white-space:pre-wrap">@Model.GetDateFormatted(i)</h5></th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @for (int j = 0; j < Model.Hours.Count; j++)
                    {
                        <tr>
                            <td><h5 style="white-space:nowrap">@Model.Hours[j].ToString("HH:mm") - @Model.Hours[j].AddMinutes(30).ToString("HH:mm")</h5></td>
                            @for (int i = 0; i < 5; i++)
                            {
                                var appointment = Model.SelectedCalender.Timeslots.FirstOrDefault(y => Model.SelectedCalender.Timeslots.Any(x => y.StartDateTime.TimeOfDay == Model.Hours[j].TimeOfDay && y.StartDateTime.Date == Model.Dates[i].Date));
                                @if (appointment != null)
                                {
                                    if (appointment.Booking == null)
                                    {
                                        <td onclick="ToggleModal('CreateBookingModal'); newAJAXcommand('@(bookingViewModel.TheBooking.StartDateTime = appointment.StartDateTime)'); newAJAXcommand('@(bookingViewModel.TheBooking.EndDateTime = appointment.EndDateTime)'); newAJAXcommand('@(bookingViewModel.TheTimeslot = appointment)')" data-toggle="modal" data-target="#CreateBookingModal" style="cursor:pointer" class="Available-Appointment"><p>@appointment.Teacher.FirstName</p></td>

                                    }
                                    else
                                    {
                                        <td class="Not-Available-Appointment">Reserved by @appointment.Booking.Student.FirstName</td>
                                    }
                                }
                                else
                                {
                                    <td></td>
                                }
                            }
                        </tr>

                    }
                </tbody>
            </table>

        }
    }

</section>
<partial name="~/Views/Booking/Create.cshtml" model="bookingViewModel" />
<partial name="~/Views/Timeslot/Create.cshtml" model="createTimeslotViewModel" />

<script>
    function ToggleModal(modalToToggle) {
        $('#' + modalToToggle).modal({
            show: 'true'
        });
    }

</script>